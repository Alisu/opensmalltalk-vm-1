OmEntry {	#tags : {		#author : 'Pablo',		#time : DateAndTime [ '2019-10-30T16:02:09.241726+01:00' ],		#prior : OmReference [ 'Pharo7.0.4-0-32bit-ccd1f64.de29uq8eawzz4a4i0m3zsjtg8', '20' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'StackInterpreter class',				#isMetaSide : true			},			#name : #'requiredMethodNames:',			#protocol : #translation,			#sourceCode : 'requiredMethodNames: options\r\t"Answer the list of method names that should be retained for export or other support reasons"\r\t| requiredList |\r\t"A number of methods required by VM support code, specific platforms, etc"\r\trequiredList := #(\r\t\tassertValidExecutionPointe:r:s:\r\t\tcharacterForAscii:\r\t\tfindClassOfMethod:forReceiver: findSelectorOfMethod:\r\t\t\tforceInterruptCheck forceInterruptCheckFromHeartbeat fullDisplayUpdate\r\t\tgetCurrentBytecode getFullScreenFlag getInterruptKeycode getInterruptPending\r\t\t\tgetSavedWindowSize getThisSessionID\r\t\tinterpret\r\t\tloadInitialContext\r\t\tprimitiveFail primitiveFailFor: primitiveFlushExternalPrimitives printAllStacks printCallStack printContext:\r\t\t\tprintExternalHeadFrame printFramesInPage: printFrame: printHeadFrame printMemory printOop:\r\t\t\t\tprintStackPages printStackPageList printStackPagesInUse printStackPageListInUse\r\t\treadableFormat: readImageFromFile:HeapSize:StartingAt:\r\t\tsetFullScreenFlag: setInterruptKeycode: setInterruptPending: setInterruptCheckChain:\r\t\t\tsetSavedWindowSize: success:\r\t\tvalidInstructionPointer:inMethod:framePointer:) asSet.\r\r\t"Nice to actually have all the primitives available"\r\trequiredList addAll: (self primitiveTable select: [:each| each isSymbol]).\r\r\t"InterpreterProxy is the internal analogue of sqVirtualMachine.c, so make sure to keep all those"\r\tInterpreterProxy organization categories do:\r\t\t[:cat |\r\t\t((cat ~= \'initialize\') and: [cat ~= \'private\']) ifTrue:\r\t\t\t[requiredList addAll: (InterpreterProxy organization listAtCategoryNamed: cat)]].\r\r\t^requiredList',			#stamp : '',			#package : #VMMaker		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'StackInterpreter class',				#isMetaSide : true			},			#name : #'requiredMethodNames:',			#protocol : #translation,			#sourceCode : 'requiredMethodNames: options\r\t"Answer the list of method names that should be retained for export or other support reasons"\r\t| requiredList |\r\t"A number of methods required by VM support code, specific platforms, etc"\r\trequiredList := #(\r\t\tassertValidExecutionPointe:r:s:\r\t\tcharacterForAscii:\r\t\tfindClassOfMethod:forReceiver: findSelectorOfMethod:\r\t\t\tforceInterruptCheck forceInterruptCheckFromHeartbeat fullDisplayUpdate\r\t\tgetCurrentBytecode getFullScreenFlag getInterruptKeycode getInterruptPending\r\t\t\tgetSavedWindowSize getThisSessionID\r\t\tinterpret\r\t\tloadInitialContext\r\t\tprimitiveFail primitiveFailFor: primitiveFlushExternalPrimitives printAllStacks printCallStack printContext:\r\t\t\tprintExternalHeadFrame printFramesInPage: printFrame: printHeadFrame printMemory printOop:\r\t\t\t\tprintStackPages printStackPageList printStackPagesInUse printStackPageListInUse\r\t\treadableFormat: readImageFromFile:HeapSize:StartingAt:\r\t\tsetFullScreenFlag: setInterruptKeycode: setInterruptPending: setInterruptCheckChain:\r\t\t\tsetSavedWindowSize: success:\r\t\treturnGlobalStructForCurrentThread\r\t\tvalidInstructionPointer:inMethod:framePointer:) asSet.\r\r\t"Nice to actually have all the primitives available"\r\trequiredList addAll: (self primitiveTable select: [:each| each isSymbol]).\r\r\t"InterpreterProxy is the internal analogue of sqVirtualMachine.c, so make sure to keep all those"\r\tInterpreterProxy organization categories do:\r\t\t[:cat |\r\t\t((cat ~= \'initialize\') and: [cat ~= \'private\']) ifTrue:\r\t\t\t[requiredList addAll: (InterpreterProxy organization listAtCategoryNamed: cat)]].\r\r\t^requiredList',			#stamp : 'Pablo 10/30/2019 16:02',			#package : #VMMaker		}	}}OmEntry {	#tags : {		#author : 'Pablo',		#time : DateAndTime [ '2019-10-30T16:02:45.870464+01:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'StackInterpreter class',				#isMetaSide : true			},			#name : #'requiredMethodNames:',			#protocol : #translation,			#sourceCode : 'requiredMethodNames: options\r\t"Answer the list of method names that should be retained for export or other support reasons"\r\t| requiredList |\r\t"A number of methods required by VM support code, specific platforms, etc"\r\trequiredList := #(\r\t\tassertValidExecutionPointe:r:s:\r\t\tcharacterForAscii:\r\t\tfindClassOfMethod:forReceiver: findSelectorOfMethod:\r\t\t\tforceInterruptCheck forceInterruptCheckFromHeartbeat fullDisplayUpdate\r\t\tgetCurrentBytecode getFullScreenFlag getInterruptKeycode getInterruptPending\r\t\t\tgetSavedWindowSize getThisSessionID\r\t\tinterpret\r\t\tloadInitialContext\r\t\tprimitiveFail primitiveFailFor: primitiveFlushExternalPrimitives printAllStacks printCallStack printContext:\r\t\t\tprintExternalHeadFrame printFramesInPage: printFrame: printHeadFrame printMemory printOop:\r\t\t\t\tprintStackPages printStackPageList printStackPagesInUse printStackPageListInUse\r\t\treadableFormat: readImageFromFile:HeapSize:StartingAt:\r\t\tsetFullScreenFlag: setInterruptKeycode: setInterruptPending: setInterruptCheckChain:\r\t\t\tsetSavedWindowSize: success:\r\t\treturnGlobalStructForCurrentThread\r\t\tvalidInstructionPointer:inMethod:framePointer:) asSet.\r\r\t"Nice to actually have all the primitives available"\r\trequiredList addAll: (self primitiveTable select: [:each| each isSymbol]).\r\r\t"InterpreterProxy is the internal analogue of sqVirtualMachine.c, so make sure to keep all those"\r\tInterpreterProxy organization categories do:\r\t\t[:cat |\r\t\t((cat ~= \'initialize\') and: [cat ~= \'private\']) ifTrue:\r\t\t\t[requiredList addAll: (InterpreterProxy organization listAtCategoryNamed: cat)]].\r\r\t^requiredList',			#stamp : 'Pablo 10/30/2019 16:02',			#package : #VMMaker		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'StackInterpreter class',				#isMetaSide : true			},			#name : #'requiredMethodNames:',			#protocol : #translation,			#sourceCode : 'requiredMethodNames: options\r\t"Answer the list of method names that should be retained for export or other support reasons"\r\t| requiredList |\r\t"A number of methods required by VM support code, specific platforms, etc"\r\trequiredList := #(\r\t\tassertValidExecutionPointe:r:s:\r\t\tcharacterForAscii:\r\t\tfindClassOfMethod:forReceiver: findSelectorOfMethod:\r\t\t\tforceInterruptCheck forceInterruptCheckFromHeartbeat fullDisplayUpdate\r\t\tgetCurrentBytecode getFullScreenFlag getInterruptKeycode getInterruptPending\r\t\t\tgetSavedWindowSize getThisSessionID\r\t\tinterpret\r\t\tloadInitialContext\r\t\tprimitiveFail primitiveFailFor: primitiveFlushExternalPrimitives printAllStacks printCallStack printContext:\r\t\t\tprintExternalHeadFrame printFramesInPage: printFrame: printHeadFrame printMemory printOop:\r\t\t\t\tprintStackPages printStackPageList printStackPagesInUse printStackPageListInUse\r\t\treadableFormat: readImageFromFile:HeapSize:StartingAt:\r\t\tsetFullScreenFlag: setInterruptKeycode: setInterruptPending: setInterruptCheckChain:\r\t\t\tsetSavedWindowSize: success:\r\t\treturnGlobalStructForCurrentThread\r\t\tsetMyCurrentThread:_:\r\t\tvalidInstructionPointer:inMethod:framePointer:) asSet.\r\r\t"Nice to actually have all the primitives available"\r\trequiredList addAll: (self primitiveTable select: [:each| each isSymbol]).\r\r\t"InterpreterProxy is the internal analogue of sqVirtualMachine.c, so make sure to keep all those"\r\tInterpreterProxy organization categories do:\r\t\t[:cat |\r\t\t((cat ~= \'initialize\') and: [cat ~= \'private\']) ifTrue:\r\t\t\t[requiredList addAll: (InterpreterProxy organization listAtCategoryNamed: cat)]].\r\r\t^requiredList',			#stamp : 'Pablo 10/30/2019 16:02',			#package : #VMMaker		}	}}